plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

repositories {
    mavenCentral()
}


dependencies {
    constraints {
        implementation "org.apache.kafka:kafka-clients:$kafka_version"
        implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
        implementation "com.fasterxml.jackson.core:jackson-core:$jackson_version"
        implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
    }
    implementation project(":sidec-standin-core")
    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-jdbc")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.kafka:spring-kafka")
    implementation "org.apache.kafka:kafka-clients"
    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation "com.fasterxml.jackson.core:jackson-core"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"

    testImplementation("org.springframework.boot:spring-boot-starter-web")
    testImplementation("org.springframework.boot:spring-boot-starter-data-jdbc")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.postgresql:postgresql:$postgresql_version")
    testImplementation("org.awaitility:awaitility:$awaitility_version")
    testImplementation("org.testcontainers:testcontainers:$testcontainers_version")
    testImplementation("org.testcontainers:junit-jupiter:$testcontainers_version")
    testImplementation("org.testcontainers:postgresql:$testcontainers_version")
    testImplementation("org.testcontainers:kafka:$testcontainers_version")
    testImplementation("org.assertj:assertj-core:$assertj_core_version")
}

group = "ru.sbrf.sidec"
version = "$sidec_standin_starter_version"
description = "Sidec application standin spring6 starter"

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.jar {
    enabled = true
    // Remove `plain` postfix from jar file name
    archiveClassifier.set("")
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true

        showStandardStreams = false
    }
}
bootJar.onlyIf {
    false
}

